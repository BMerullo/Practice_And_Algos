{"ast":null,"code":"var _jsxFileName = \"/Users/bobmerullo/Coding-Files/Simple_projects/client/src/components/BoxForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BoxForm = props => {\n  _s();\n\n  const {\n    boxArray,\n    setBoxArray\n  } = props;\n  const [box, setBox] = useState({\n    color: \"\",\n    size: 50\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"boxGenerator\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"color\",\n          children: \"Color:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"color\",\n          value: box.color,\n          onChange: e => setBox.color[e.target.value]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"size\",\n          children: \"Size:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"size\",\n          value: box.size + \"px\",\n          onChange: e => setBox.size[e.target.value]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BoxForm, \"to+PfnbGvmBDTfNf8hDMC0kWM6o=\");\n\n_c = BoxForm;\nexport default BoxForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BoxForm\");","map":{"version":3,"sources":["/Users/bobmerullo/Coding-Files/Simple_projects/client/src/components/BoxForm.js"],"names":["React","useState","BoxForm","props","boxArray","setBoxArray","box","setBox","color","size","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAGA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AAEvB,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAA0BF,KAAhC;AACA,QAAM,CAACG,GAAD,EAAMC,MAAN,IAAgBN,QAAQ,CAAC;AAC3BO,IAAAA,KAAK,EAAE,EADoB;AAE3BC,IAAAA,IAAI,EAAE;AAFqB,GAAD,CAA9B;AAMA,sBACI;AAAA,2BACI;AAAM,MAAA,MAAM,EAAC,cAAb;AAAA,8BACI;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AACA,UAAA,IAAI,EAAC,MADL;AAEA,UAAA,IAAI,EAAC,OAFL;AAGA,UAAA,KAAK,EAAEH,GAAG,CAACE,KAHX;AAIA,UAAA,QAAQ,EAAGE,CAAD,IAAMH,MAAM,CAACC,KAAP,CAAaE,CAAC,CAACC,MAAF,CAASC,KAAtB;AAJhB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eASI;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AACA,UAAA,IAAI,EAAC,MADL;AAEA,UAAA,IAAI,EAAC,MAFL;AAGA,UAAA,KAAK,EAAEN,GAAG,CAACG,IAAJ,GAAW,IAHlB;AAIA,UAAA,QAAQ,EAAGC,CAAD,IAAKH,MAAM,CAACE,IAAP,CAAYC,CAAC,CAACC,MAAF,CAASC,KAArB;AAJf;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CA/BD;;GAAMV,O;;KAAAA,O;AAiCN,eAAeA,OAAf","sourcesContent":["import React, {useState} from 'react';\n\n\nconst BoxForm = (props) => {\n\n    const {boxArray, setBoxArray} = props\n    const [box, setBox] = useState({\n        color: \"\",\n        size: 50\n    })\n\n\n    return (\n        <div>\n            <form action=\"boxGenerator\">\n                <div>\n                    <label htmlFor=\"color\">Color:</label>\n                    <input \n                    type=\"text\"\n                    name=\"color\"\n                    value={box.color} \n                    onChange={(e)=> setBox.color[e.target.value]}/>\n                </div>\n                <div>\n                    <label htmlFor=\"size\">Size:</label>\n                    <input \n                    type=\"text\" \n                    name=\"size\"\n                    value={box.size + \"px\"}\n                    onChange={(e)=>setBox.size[e.target.value]}/>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default BoxForm;"]},"metadata":{},"sourceType":"module"}